{"ast":null,"code":"import React,{useState}from'react';import StartingPage from'./components/StartingPage';import Navbar from'./components/Navbar';import Map from'./components/Map';import'./App.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isCallForHelpMode,setIsCallForHelpMode]=useState(false);const[isDonateGoodsMode,setIsDonateGoodsMode]=useState(false);// Track donate goods mode\nconst[role,setRole]=useState(null);// Track the selected role (victim or responder)\nconst[pins,setPins]=useState([]);// Move pins state to App.js to persist across navigation\n// Handle role selection\nconst handleSelectRole=selectedRole=>{setRole(selectedRole);};// Handle back button click\nconst handleBack=()=>{setRole(null);// Reset the role to return to the starting page\n};// Render the appropriate component based on the selected role\nconst renderContent=()=>{if(!role){return/*#__PURE__*/_jsx(StartingPage,{onSelectRole:handleSelectRole});}else if(role==='victim'){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{onCallForHelp:()=>setIsCallForHelpMode(true),onDonateGoods:()=>setIsDonateGoodsMode(true),onBack:handleBack}),/*#__PURE__*/_jsx(Map,{isCallForHelpMode:isCallForHelpMode,setIsCallForHelpMode:setIsCallForHelpMode,isDonateGoodsMode:isDonateGoodsMode,setIsDonateGoodsMode:setIsDonateGoodsMode,pins:pins,setPins:setPins})]});}else if(role==='responder'){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{onBack:handleBack}),/*#__PURE__*/_jsx(\"div\",{className:\"responder-placeholder\",children:\"Responder view not implemented yet.\"})]});}};return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:role==='victim'?'row':'column'},children:renderContent()});}export default App;","map":{"version":3,"names":["React","useState","StartingPage","Navbar","Map","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","isCallForHelpMode","setIsCallForHelpMode","isDonateGoodsMode","setIsDonateGoodsMode","role","setRole","pins","setPins","handleSelectRole","selectedRole","handleBack","renderContent","onSelectRole","children","onCallForHelp","onDonateGoods","onBack","className","style","display","flexDirection"],"sources":["C:/Users/Abet Caro/Desktop/FRONTEND/BlueHacks2025FRONTEND/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport StartingPage from './components/StartingPage';\r\nimport Navbar from './components/Navbar';\r\nimport Map from './components/Map';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isCallForHelpMode, setIsCallForHelpMode] = useState(false);\r\n  const [isDonateGoodsMode, setIsDonateGoodsMode] = useState(false); // Track donate goods mode\r\n  const [role, setRole] = useState(null); // Track the selected role (victim or responder)\r\n  const [pins, setPins] = useState([]); // Move pins state to App.js to persist across navigation\r\n\r\n  // Handle role selection\r\n  const handleSelectRole = (selectedRole) => {\r\n    setRole(selectedRole);\r\n  };\r\n\r\n  // Handle back button click\r\n  const handleBack = () => {\r\n    setRole(null); // Reset the role to return to the starting page\r\n  };\r\n\r\n  // Render the appropriate component based on the selected role\r\n  const renderContent = () => {\r\n    if (!role) {\r\n      return <StartingPage onSelectRole={handleSelectRole} />;\r\n    } else if (role === 'victim') {\r\n      return (\r\n        <>\r\n          <Navbar\r\n            onCallForHelp={() => setIsCallForHelpMode(true)}\r\n            onDonateGoods={() => setIsDonateGoodsMode(true)}\r\n            onBack={handleBack}\r\n          />\r\n          <Map\r\n            isCallForHelpMode={isCallForHelpMode}\r\n            setIsCallForHelpMode={setIsCallForHelpMode}\r\n            isDonateGoodsMode={isDonateGoodsMode}\r\n            setIsDonateGoodsMode={setIsDonateGoodsMode}\r\n            pins={pins}\r\n            setPins={setPins}\r\n          />\r\n        </>\r\n      );\r\n    } else if (role === 'responder') {\r\n      return (\r\n        <>\r\n          <Navbar onBack={handleBack} />\r\n          <div className=\"responder-placeholder\">Responder view not implemented yet.</div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: role === 'victim' ? 'row' : 'column' }}>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,GAAG,KAAM,kBAAkB,CAClC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACa,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAAE;AACnE,KAAM,CAACe,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAE;AACxC,KAAM,CAACiB,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEtC;AACA,KAAM,CAAAmB,gBAAgB,CAAIC,YAAY,EAAK,CACzCJ,OAAO,CAACI,YAAY,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBL,OAAO,CAAC,IAAI,CAAC,CAAE;AACjB,CAAC,CAED;AACA,KAAM,CAAAM,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAACP,IAAI,CAAE,CACT,mBAAOV,IAAA,CAACJ,YAAY,EAACsB,YAAY,CAAEJ,gBAAiB,CAAE,CAAC,CACzD,CAAC,IAAM,IAAIJ,IAAI,GAAK,QAAQ,CAAE,CAC5B,mBACEN,KAAA,CAAAF,SAAA,EAAAiB,QAAA,eACEnB,IAAA,CAACH,MAAM,EACLuB,aAAa,CAAEA,CAAA,GAAMb,oBAAoB,CAAC,IAAI,CAAE,CAChDc,aAAa,CAAEA,CAAA,GAAMZ,oBAAoB,CAAC,IAAI,CAAE,CAChDa,MAAM,CAAEN,UAAW,CACpB,CAAC,cACFhB,IAAA,CAACF,GAAG,EACFQ,iBAAiB,CAAEA,iBAAkB,CACrCC,oBAAoB,CAAEA,oBAAqB,CAC3CC,iBAAiB,CAAEA,iBAAkB,CACrCC,oBAAoB,CAAEA,oBAAqB,CAC3CG,IAAI,CAAEA,IAAK,CACXC,OAAO,CAAEA,OAAQ,CAClB,CAAC,EACF,CAAC,CAEP,CAAC,IAAM,IAAIH,IAAI,GAAK,WAAW,CAAE,CAC/B,mBACEN,KAAA,CAAAF,SAAA,EAAAiB,QAAA,eACEnB,IAAA,CAACH,MAAM,EAACyB,MAAM,CAAEN,UAAW,CAAE,CAAC,cAC9BhB,IAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAJ,QAAA,CAAC,qCAAmC,CAAK,CAAC,EAChF,CAAC,CAEP,CACF,CAAC,CAED,mBACEnB,IAAA,QAAKwB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,aAAa,CAAEhB,IAAI,GAAK,QAAQ,CAAG,KAAK,CAAG,QAAS,CAAE,CAAAS,QAAA,CAClFF,aAAa,CAAC,CAAC,CACb,CAAC,CAEV,CAEA,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}