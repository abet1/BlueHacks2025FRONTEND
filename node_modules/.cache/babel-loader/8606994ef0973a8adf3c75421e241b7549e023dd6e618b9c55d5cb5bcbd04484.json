{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{GoogleMap,Marker,useLoadScript,Autocomplete}from'@react-google-maps/api';import axios from'axios';import Popup from'./Popup';import DonationPopup from'./DonationPopup';import'./Map.css';import{backendUrl}from'../config';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Map=_ref=>{var _pins,_pins2;let{isCallForHelpMode,setIsCallForHelpMode,isDonateGoodsMode,setIsDonateGoodsMode,pins,setPins}=_ref;const[markerPosition,setMarkerPosition]=useState(null);const[showPopup,setShowPopup]=useState(false);const[showDonationPopup,setShowDonationPopup]=useState(false);const[isLocationConfirmed,setIsLocationConfirmed]=useState(false);const[selectedPin,setSelectedPin]=useState(null);const[address,setAddress]=useState('');const[donationDetails,setDonationDetails]=useState({goods:'',quantity:''});const[mapCenter,setMapCenter]=useState({lat:14,lng:482});// State for map center\nconst autocompleteRef=useRef(null);const{isLoaded}=useLoadScript({googleMapsApiKey:'AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8',// Replace with your API key\nlibraries:['places']});// Get the user's current location\nuseEffect(()=>{if((isCallForHelpMode||isDonateGoodsMode)&&navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{const userLocation={lat:position.coords.latitude,lng:position.coords.longitude};setMarkerPosition(userLocation);setMapCenter(userLocation);// Center the map on the user's location\nfetchAddress(userLocation);// If in \"Donate Goods\" mode, show the donation popup immediately\nif(isDonateGoodsMode){setShowDonationPopup(true);}},error=>{console.error('Error getting user location:',error);});}},[isCallForHelpMode,isDonateGoodsMode]);// Fetch address from coordinates\nconst fetchAddress=async position=>{try{const response=await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.lat},${position.lng}&key=AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8`);if(response.data.results[0]){setAddress(response.data.results[0].formatted_address);}}catch(error){console.error('Error fetching address:',error);}};// Handle map clicks (only for call for help mode)\nconst handleMapClick=event=>{if(isCallForHelpMode&&!isLocationConfirmed){const newPosition={lat:event.latLng.lat(),lng:event.latLng.lng()};setMarkerPosition(newPosition);setMapCenter(newPosition);// Center the map on the clicked position\nfetchAddress(newPosition);}};// Handle address search\nconst onPlaceChanged=()=>{if(autocompleteRef.current){const place=autocompleteRef.current.getPlace();if(place.geometry){const newPosition={lat:place.geometry.location.lat(),lng:place.geometry.location.lng()};setMarkerPosition(newPosition);setMapCenter(newPosition);// Center the map on the searched location\nsetAddress(place.formatted_address);}}};// Handle disaster selection\nconst handleSelectDisaster=async disasterType=>{if(markerPosition){const newPin={id:Date.now(),position:markerPosition,type:'help',// Pin type: help or donation\ndisasterType:disasterType,address:address};// Send the disaster data to the backend\ntry{const response=await axios.post(`${backendUrl}/report`,{disaster_type:disasterType,latitude:markerPosition.lat,longitude:markerPosition.lng,address:address});console.log('Disaster reported successfully:',response.data);}catch(error){console.error('Error reporting disaster:',error);}// Update the frontend state\nsetPins(prevPins=>[...prevPins,newPin]);setShowPopup(false);setIsLocationConfirmed(true);setMarkerPosition(null);setAddress('');setIsCallForHelpMode(false);}};// Handle donation submission\nconst handleDonationSubmit=()=>{if(markerPosition){const newPin={id:Date.now(),position:markerPosition,type:'donation',// Pin type: help or donation\naddress:address,goods:donationDetails.goods,quantity:donationDetails.quantity};setPins(prevPins=>[...prevPins,newPin]);setShowDonationPopup(false);setMarkerPosition(null);setAddress('');setIsDonateGoodsMode(false);}};// Handle pin deletion\nconst handleDeletePin=pinId=>{setPins(prevPins=>prevPins.filter(pin=>pin.id!==pinId));setSelectedPin(null);};// Handle pin selection\nconst handlePinClick=pin=>{setSelectedPin(pin);setMapCenter(pin.position);// Center the map on the clicked pin\n};// Ensure only one mode is active at a time\nuseEffect(()=>{if(isCallForHelpMode){setIsDonateGoodsMode(false);}else if(isDonateGoodsMode){setIsCallForHelpMode(false);}},[isCallForHelpMode,isDonateGoodsMode,setIsCallForHelpMode,setIsDonateGoodsMode]);if(!isLoaded)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(GoogleMap,{zoom:12,center:mapCenter// Use the mapCenter state\n,mapContainerStyle:{width:'100%',height:'100vh'},onClick:isCallForHelpMode&&!isLocationConfirmed?handleMapClick:undefined,children:[pins.map(pin=>/*#__PURE__*/_jsx(Marker,{position:pin.position,onClick:()=>handlePinClick(pin)// Handle pin click\n,icon:{url:pin.type==='donation'?'http://maps.google.com/mapfiles/ms/icons/green-dot.png':'http://maps.google.com/mapfiles/ms/icons/red-dot.png'}},pin.id)),isCallForHelpMode&&!isDonateGoodsMode&&markerPosition&&!isLocationConfirmed&&/*#__PURE__*/_jsx(Marker,{position:markerPosition,draggable:true,onDragEnd:event=>{const newPosition={lat:event.latLng.lat(),lng:event.latLng.lng()};setMarkerPosition(newPosition);setMapCenter(newPosition);// Center the map on the dragged position\nfetchAddress(newPosition);}})]}),isCallForHelpMode&&!isDonateGoodsMode&&!isLocationConfirmed&&/*#__PURE__*/_jsx(\"div\",{className:\"search\",children:/*#__PURE__*/_jsx(Autocomplete,{onLoad:autocomplete=>autocompleteRef.current=autocomplete,onPlaceChanged:onPlaceChanged,children:/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",placeholder:\"Search for an address\",value:address,onChange:e=>setAddress(e.target.value)})})}),isCallForHelpMode&&!isDonateGoodsMode&&!isLocationConfirmed&&/*#__PURE__*/_jsx(\"button\",{className:\"confirm\",onClick:()=>setShowPopup(true),children:\"Confirm Location\"}),showPopup&&/*#__PURE__*/_jsx(Popup,{onSelectDisaster:handleSelectDisaster,onClose:()=>setShowPopup(false)}),showDonationPopup&&/*#__PURE__*/_jsx(DonationPopup,{address:address,onConfirm:handleDonationSubmit,onClose:()=>setShowDonationPopup(false),donationDetails:donationDetails,setDonationDetails:setDonationDetails}),isLocationConfirmed&&/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-popup\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"You asked for help at \",/*#__PURE__*/_jsx(\"strong\",{children:(_pins=pins[pins.length-1])===null||_pins===void 0?void 0:_pins.address}),\" with\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:(_pins2=pins[pins.length-1])===null||_pins2===void 0?void 0:_pins2.disasterType}),\". Are you sure?\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _pins3;return handleDeletePin((_pins3=pins[pins.length-1])===null||_pins3===void 0?void 0:_pins3.id);},children:\"Delete Pin\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsLocationConfirmed(false),children:\"Okay\"})]}),selectedPin&&/*#__PURE__*/_jsxs(\"div\",{className:\"pin-details\",children:[/*#__PURE__*/_jsx(\"p\",{children:selectedPin.type==='donation'?/*#__PURE__*/_jsxs(_Fragment,{children:[\"Donation at \",/*#__PURE__*/_jsx(\"strong\",{children:selectedPin.address}),\" with\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:selectedPin.goods}),\" (Quantity: \",selectedPin.quantity,\").\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"Help asked at \",/*#__PURE__*/_jsx(\"strong\",{children:selectedPin.address}),\" with\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:selectedPin.disasterType}),\".\"]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeletePin(selectedPin.id),children:\"Delete Pin\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedPin(null),children:\"Okay\"})]})]});};export default Map;","map":{"version":3,"names":["React","useState","useEffect","useRef","GoogleMap","Marker","useLoadScript","Autocomplete","axios","Popup","DonationPopup","backendUrl","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Map","_ref","_pins","_pins2","isCallForHelpMode","setIsCallForHelpMode","isDonateGoodsMode","setIsDonateGoodsMode","pins","setPins","markerPosition","setMarkerPosition","showPopup","setShowPopup","showDonationPopup","setShowDonationPopup","isLocationConfirmed","setIsLocationConfirmed","selectedPin","setSelectedPin","address","setAddress","donationDetails","setDonationDetails","goods","quantity","mapCenter","setMapCenter","lat","lng","autocompleteRef","isLoaded","googleMapsApiKey","libraries","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","fetchAddress","error","console","response","get","data","results","formatted_address","handleMapClick","event","newPosition","latLng","onPlaceChanged","current","place","getPlace","geometry","location","handleSelectDisaster","disasterType","newPin","id","Date","now","type","post","disaster_type","log","prevPins","handleDonationSubmit","handleDeletePin","pinId","filter","pin","handlePinClick","children","zoom","center","mapContainerStyle","width","height","onClick","undefined","map","icon","url","draggable","onDragEnd","className","onLoad","autocomplete","placeholder","value","onChange","e","target","onSelectDisaster","onClose","onConfirm","length","_pins3"],"sources":["C:/Users/Abet Caro/Desktop/FRONTEND/BlueHacks2025FRONTEND/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { GoogleMap, Marker, useLoadScript, Autocomplete } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\nimport Popup from './Popup';\r\nimport DonationPopup from './DonationPopup';\r\nimport './Map.css';\r\nimport { backendUrl } from '../config'; \r\n\r\nconst Map = ({\r\n  isCallForHelpMode,\r\n  setIsCallForHelpMode,\r\n  isDonateGoodsMode,\r\n  setIsDonateGoodsMode,\r\n  pins,\r\n  setPins,\r\n}) => {\r\n  const [markerPosition, setMarkerPosition] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [showDonationPopup, setShowDonationPopup] = useState(false);\r\n  const [isLocationConfirmed, setIsLocationConfirmed] = useState(false);\r\n  const [selectedPin, setSelectedPin] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [donationDetails, setDonationDetails] = useState({ goods: '', quantity: '' });\r\n  const [mapCenter, setMapCenter] = useState({ lat: 14, lng: 482 }); // State for map center\r\n  const autocompleteRef = useRef(null);\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: 'AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8', // Replace with your API key\r\n    libraries: ['places'],\r\n  });\r\n\r\n  // Get the user's current location\r\n  useEffect(() => {\r\n    if ((isCallForHelpMode || isDonateGoodsMode) && navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const userLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          setMarkerPosition(userLocation);\r\n          setMapCenter(userLocation); // Center the map on the user's location\r\n          fetchAddress(userLocation);\r\n\r\n          // If in \"Donate Goods\" mode, show the donation popup immediately\r\n          if (isDonateGoodsMode) {\r\n            setShowDonationPopup(true);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error getting user location:', error);\r\n        }\r\n      );\r\n    }\r\n  }, [isCallForHelpMode, isDonateGoodsMode]);\r\n\r\n  // Fetch address from coordinates\r\n  const fetchAddress = async (position) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.lat},${position.lng}&key=AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8`\r\n      );\r\n      if (response.data.results[0]) {\r\n        setAddress(response.data.results[0].formatted_address);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching address:', error);\r\n    }\r\n  };\r\n\r\n  // Handle map clicks (only for call for help mode)\r\n  const handleMapClick = (event) => {\r\n    if (isCallForHelpMode && !isLocationConfirmed) {\r\n      const newPosition = {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n      };\r\n      setMarkerPosition(newPosition);\r\n      setMapCenter(newPosition); // Center the map on the clicked position\r\n      fetchAddress(newPosition);\r\n    }\r\n  };\r\n\r\n  // Handle address search\r\n  const onPlaceChanged = () => {\r\n    if (autocompleteRef.current) {\r\n      const place = autocompleteRef.current.getPlace();\r\n      if (place.geometry) {\r\n        const newPosition = {\r\n          lat: place.geometry.location.lat(),\r\n          lng: place.geometry.location.lng(),\r\n        };\r\n        setMarkerPosition(newPosition);\r\n        setMapCenter(newPosition); // Center the map on the searched location\r\n        setAddress(place.formatted_address);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle disaster selection\r\n  const handleSelectDisaster = async (disasterType) => {\r\n    if (markerPosition) {\r\n      const newPin = {\r\n        id: Date.now(),\r\n        position: markerPosition,\r\n        type: 'help', // Pin type: help or donation\r\n        disasterType: disasterType,\r\n        address: address,\r\n      };\r\n  \r\n      // Send the disaster data to the backend\r\n      try {\r\n        const response = await axios.post(`${backendUrl}/report`, {\r\n          disaster_type: disasterType,\r\n          latitude: markerPosition.lat,\r\n          longitude: markerPosition.lng,\r\n          address: address,\r\n        });\r\n        console.log('Disaster reported successfully:', response.data);\r\n      } catch (error) {\r\n        console.error('Error reporting disaster:', error);\r\n      }\r\n  \r\n      // Update the frontend state\r\n      setPins((prevPins) => [...prevPins, newPin]);\r\n      setShowPopup(false);\r\n      setIsLocationConfirmed(true);\r\n      setMarkerPosition(null);\r\n      setAddress('');\r\n      setIsCallForHelpMode(false);\r\n    }\r\n  };\r\n\r\n  // Handle donation submission\r\n  const handleDonationSubmit = () => {\r\n    if (markerPosition) {\r\n      const newPin = {\r\n        id: Date.now(),\r\n        position: markerPosition,\r\n        type: 'donation', // Pin type: help or donation\r\n        address: address,\r\n        goods: donationDetails.goods,\r\n        quantity: donationDetails.quantity,\r\n      };\r\n      setPins((prevPins) => [...prevPins, newPin]);\r\n      setShowDonationPopup(false);\r\n      setMarkerPosition(null);\r\n      setAddress('');\r\n      setIsDonateGoodsMode(false);\r\n    }\r\n  };\r\n\r\n  // Handle pin deletion\r\n  const handleDeletePin = (pinId) => {\r\n    setPins((prevPins) => prevPins.filter((pin) => pin.id !== pinId));\r\n    setSelectedPin(null);\r\n  };\r\n\r\n  // Handle pin selection\r\n  const handlePinClick = (pin) => {\r\n    setSelectedPin(pin);\r\n    setMapCenter(pin.position); // Center the map on the clicked pin\r\n  };\r\n\r\n  // Ensure only one mode is active at a time\r\n  useEffect(() => {\r\n    if (isCallForHelpMode) {\r\n      setIsDonateGoodsMode(false);\r\n    } else if (isDonateGoodsMode) {\r\n      setIsCallForHelpMode(false);\r\n    }\r\n  }, [isCallForHelpMode, isDonateGoodsMode, setIsCallForHelpMode, setIsDonateGoodsMode]);\r\n\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <>\r\n      <GoogleMap\r\n        zoom={12}\r\n        center={mapCenter} // Use the mapCenter state\r\n        mapContainerStyle={{ width: '100%', height: '100vh' }}\r\n        onClick={isCallForHelpMode && !isLocationConfirmed ? handleMapClick : undefined}\r\n      >\r\n        {/* Render all pins */}\r\n        {pins.map((pin) => (\r\n          <Marker\r\n            key={pin.id}\r\n            position={pin.position}\r\n            onClick={() => handlePinClick(pin)} // Handle pin click\r\n            icon={{\r\n              url: pin.type === 'donation' ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {/* Render the current marker (if not confirmed yet) */}\r\n        {isCallForHelpMode && !isDonateGoodsMode && markerPosition && !isLocationConfirmed && (\r\n          <Marker\r\n            position={markerPosition}\r\n            draggable={true}\r\n            onDragEnd={(event) => {\r\n              const newPosition = {\r\n                lat: event.latLng.lat(),\r\n                lng: event.latLng.lng(),\r\n              };\r\n              setMarkerPosition(newPosition);\r\n              setMapCenter(newPosition); // Center the map on the dragged position\r\n              fetchAddress(newPosition);\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n\r\n      {/* Search Bar */}\r\n      {isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && (\r\n        <div className=\"search\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (autocompleteRef.current = autocomplete)}\r\n            onPlaceChanged={onPlaceChanged}\r\n          >\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Search for an address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </Autocomplete>\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirm Location Button */}\r\n      {isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && (\r\n        <button className=\"confirm\" onClick={() => setShowPopup(true)}>\r\n          Confirm Location\r\n        </button>\r\n      )}\r\n\r\n      {/* Popup for disaster selection */}\r\n      {showPopup && (\r\n        <Popup\r\n          onSelectDisaster={handleSelectDisaster}\r\n          onClose={() => setShowPopup(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Popup for donation details */}\r\n      {showDonationPopup && (\r\n        <DonationPopup\r\n          address={address}\r\n          onConfirm={handleDonationSubmit}\r\n          onClose={() => setShowDonationPopup(false)}\r\n          donationDetails={donationDetails}\r\n          setDonationDetails={setDonationDetails}\r\n        />\r\n      )}\r\n\r\n      {/* Confirmation message after disaster selection */}\r\n      {isLocationConfirmed && (\r\n        <div className=\"confirmation-popup\">\r\n          <p>\r\n            You asked for help at <strong>{pins[pins.length - 1]?.address}</strong> with{\" \"}\r\n            <strong>{pins[pins.length - 1]?.disasterType}</strong>. Are you sure?\r\n          </p>\r\n          <button onClick={() => handleDeletePin(pins[pins.length - 1]?.id)}>Delete Pin</button>\r\n          <button onClick={() => setIsLocationConfirmed(false)}>Okay</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pin details when a pin is selected */}\r\n      {selectedPin && (\r\n        <div className=\"pin-details\">\r\n          <p>\r\n            {selectedPin.type === 'donation' ? (\r\n              <>\r\n                Donation at <strong>{selectedPin.address}</strong> with{\" \"}\r\n                <strong>{selectedPin.goods}</strong> (Quantity: {selectedPin.quantity}).\r\n              </>\r\n            ) : (\r\n              <>\r\n                Help asked at <strong>{selectedPin.address}</strong> with{\" \"}\r\n                <strong>{selectedPin.disasterType}</strong>.\r\n              </>\r\n            )}\r\n          </p>\r\n          <button onClick={() => handleDeletePin(selectedPin.id)}>Delete Pin</button>\r\n          <button onClick={() => setSelectedPin(null)}>Okay</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}