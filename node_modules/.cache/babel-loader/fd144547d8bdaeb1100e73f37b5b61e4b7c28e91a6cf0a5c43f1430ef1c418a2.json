{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Documents\\\\Computer Science\\\\HACKATHON\\\\bluehacks\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StartingPage from './components/StartingPage';\nimport Navbar from './components/Navbar';\nimport Map from './components/Map';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isCallForHelpMode, setIsCallForHelpMode] = useState(false);\n  const [isDonateGoodsMode, setIsDonateGoodsMode] = useState(false); // Track donate goods mode\n  const [role, setRole] = useState(null); // Track the selected role (victim or responder)\n  const [pins, setPins] = useState([]); // Move pins state to App.js to persist across navigation\n\n  // Handle role selection\n  const handleSelectRole = selectedRole => {\n    setRole(selectedRole);\n  };\n\n  // Handle back button click\n  const handleBack = () => {\n    setRole(null); // Reset the role to return to the starting page\n  };\n\n  // Render the appropriate component based on the selected role\n  const renderContent = () => {\n    if (!role) {\n      return /*#__PURE__*/_jsxDEV(StartingPage, {\n        onSelectRole: handleSelectRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    } else if (role === 'victim') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          onCallForHelp: () => setIsCallForHelpMode(true),\n          onDonateGoods: () => setIsDonateGoodsMode(true),\n          onBack: handleBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          isCallForHelpMode: isCallForHelpMode,\n          setIsCallForHelpMode: setIsCallForHelpMode,\n          isDonateGoodsMode: isDonateGoodsMode,\n          setIsDonateGoodsMode: setIsDonateGoodsMode,\n          pins: pins,\n          setPins: setPins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else if (role === 'responder') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          onBack: handleBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"responder-placeholder\",\n          children: \"Responder view not implemented yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: role === 'victim' ? 'row' : 'column'\n    },\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GOK2VeozMWRZZjYh87jxnRq7U/4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StartingPage","Navbar","Map","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isCallForHelpMode","setIsCallForHelpMode","isDonateGoodsMode","setIsDonateGoodsMode","role","setRole","pins","setPins","handleSelectRole","selectedRole","handleBack","renderContent","onSelectRole","fileName","_jsxFileName","lineNumber","columnNumber","children","onCallForHelp","onDonateGoods","onBack","className","style","display","flexDirection","_c","$RefreshReg$"],"sources":["C:/Users/Josh/Documents/Computer Science/HACKATHON/bluehacks/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport StartingPage from './components/StartingPage';\r\nimport Navbar from './components/Navbar';\r\nimport Map from './components/Map';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isCallForHelpMode, setIsCallForHelpMode] = useState(false);\r\n  const [isDonateGoodsMode, setIsDonateGoodsMode] = useState(false); // Track donate goods mode\r\n  const [role, setRole] = useState(null); // Track the selected role (victim or responder)\r\n  const [pins, setPins] = useState([]); // Move pins state to App.js to persist across navigation\r\n\r\n  // Handle role selection\r\n  const handleSelectRole = (selectedRole) => {\r\n    setRole(selectedRole);\r\n  };\r\n\r\n  // Handle back button click\r\n  const handleBack = () => {\r\n    setRole(null); // Reset the role to return to the starting page\r\n  };\r\n\r\n  // Render the appropriate component based on the selected role\r\n  const renderContent = () => {\r\n    if (!role) {\r\n      return <StartingPage onSelectRole={handleSelectRole} />;\r\n    } else if (role === 'victim') {\r\n      return (\r\n        <>\r\n          <Navbar\r\n            onCallForHelp={() => setIsCallForHelpMode(true)}\r\n            onDonateGoods={() => setIsDonateGoodsMode(true)}\r\n            onBack={handleBack}\r\n          />\r\n          <Map\r\n            isCallForHelpMode={isCallForHelpMode}\r\n            setIsCallForHelpMode={setIsCallForHelpMode}\r\n            isDonateGoodsMode={isDonateGoodsMode}\r\n            setIsDonateGoodsMode={setIsDonateGoodsMode}\r\n            pins={pins}\r\n            setPins={setPins}\r\n          />\r\n        </>\r\n      );\r\n    } else if (role === 'responder') {\r\n      return (\r\n        <>\r\n          <Navbar onBack={handleBack} />\r\n          <div className=\"responder-placeholder\">Responder view not implemented yet.</div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: role === 'victim' ? 'row' : 'column' }}>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}