{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Documents\\\\Computer Science\\\\HACKATHON\\\\bluehacks\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, Marker, useLoadScript, Autocomplete } from '@react-google-maps/api';\nimport axios from 'axios';\nimport Popup from './Popup';\nimport DonationPopup from './DonationPopup';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  isCallForHelpMode,\n  setIsCallForHelpMode,\n  isDonateGoodsMode,\n  setIsDonateGoodsMode,\n  pins,\n  setPins\n}) => {\n  _s();\n  var _pins, _pins2;\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [showDonationPopup, setShowDonationPopup] = useState(false);\n  const [isLocationConfirmed, setIsLocationConfirmed] = useState(false);\n  const [selectedPin, setSelectedPin] = useState(null);\n  const [address, setAddress] = useState('');\n  const [donationDetails, setDonationDetails] = useState({\n    goods: '',\n    quantity: ''\n  });\n  const [mapCenter, setMapCenter] = useState({\n    lat: 14,\n    lng: 482\n  }); // State for map center\n  const autocompleteRef = useRef(null);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8',\n    // Replace with your API key\n    libraries: ['places']\n  });\n\n  // Get the user's current location\n  useEffect(() => {\n    if ((isCallForHelpMode || isDonateGoodsMode) && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setMarkerPosition(userLocation);\n        setMapCenter(userLocation); // Center the map on the user's location\n        fetchAddress(userLocation);\n\n        // If in \"Donate Goods\" mode, show the donation popup immediately\n        if (isDonateGoodsMode) {\n          setShowDonationPopup(true);\n        }\n      }, error => {\n        console.error('Error getting user location:', error);\n      });\n    }\n  }, [isCallForHelpMode, isDonateGoodsMode]);\n\n  // Fetch address from coordinates\n  const fetchAddress = async position => {\n    try {\n      const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.lat},${position.lng}&key=AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8`);\n      if (response.data.results[0]) {\n        setAddress(response.data.results[0].formatted_address);\n      }\n    } catch (error) {\n      console.error('Error fetching address:', error);\n    }\n  };\n\n  // Handle map clicks (only for call for help mode)\n  const handleMapClick = event => {\n    if (isCallForHelpMode && !isLocationConfirmed) {\n      const newPosition = {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      };\n      setMarkerPosition(newPosition);\n      setMapCenter(newPosition); // Center the map on the clicked position\n      fetchAddress(newPosition);\n    }\n  };\n\n  // Handle address search\n  const onPlaceChanged = () => {\n    if (autocompleteRef.current) {\n      const place = autocompleteRef.current.getPlace();\n      if (place.geometry) {\n        const newPosition = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        setMarkerPosition(newPosition);\n        setMapCenter(newPosition); // Center the map on the searched location\n        setAddress(place.formatted_address);\n      }\n    }\n  };\n\n  // Handle disaster selection\n  const handleSelectDisaster = disasterType => {\n    if (markerPosition) {\n      const newPin = {\n        id: Date.now(),\n        position: markerPosition,\n        type: 'help',\n        // Pin type: help or donation\n        disasterType: disasterType,\n        address: address\n      };\n      setPins(prevPins => [...prevPins, newPin]);\n      setShowPopup(false);\n      setIsLocationConfirmed(true);\n      setMarkerPosition(null);\n      setAddress('');\n      setIsCallForHelpMode(false);\n    }\n  };\n\n  // Handle donation submission\n  const handleDonationSubmit = () => {\n    if (markerPosition) {\n      const newPin = {\n        id: Date.now(),\n        position: markerPosition,\n        type: 'donation',\n        // Pin type: help or donation\n        address: address,\n        goods: donationDetails.goods,\n        quantity: donationDetails.quantity\n      };\n      setPins(prevPins => [...prevPins, newPin]);\n      setShowDonationPopup(false);\n      setMarkerPosition(null);\n      setAddress('');\n      setIsDonateGoodsMode(false);\n    }\n  };\n\n  // Handle pin deletion\n  const handleDeletePin = pinId => {\n    setPins(prevPins => prevPins.filter(pin => pin.id !== pinId));\n    setSelectedPin(null);\n  };\n\n  // Handle pin selection\n  const handlePinClick = pin => {\n    setSelectedPin(pin);\n    setMapCenter(pin.position); // Center the map on the clicked pin\n  };\n\n  // Ensure only one mode is active at a time\n  useEffect(() => {\n    if (isCallForHelpMode) {\n      setIsDonateGoodsMode(false);\n    } else if (isDonateGoodsMode) {\n      setIsCallForHelpMode(false);\n    }\n  }, [isCallForHelpMode, isDonateGoodsMode, setIsCallForHelpMode, setIsDonateGoodsMode]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      zoom: 12,\n      center: mapCenter // Use the mapCenter state\n      ,\n      mapContainerStyle: {\n        width: '100%',\n        height: '100vh'\n      },\n      onClick: isCallForHelpMode && !isLocationConfirmed ? handleMapClick : undefined,\n      children: [pins.map(pin => /*#__PURE__*/_jsxDEV(Marker, {\n        position: pin.position,\n        onClick: () => handlePinClick(pin) // Handle pin click\n        ,\n        icon: {\n          url: pin.type === 'donation' ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n        }\n      }, pin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)), isCallForHelpMode && !isDonateGoodsMode && markerPosition && !isLocationConfirmed && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition,\n        draggable: true,\n        onDragEnd: event => {\n          const newPosition = {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          };\n          setMarkerPosition(newPosition);\n          setMapCenter(newPosition); // Center the map on the dragged position\n          fetchAddress(newPosition);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        onLoad: autocomplete => autocompleteRef.current = autocomplete,\n        onPlaceChanged: onPlaceChanged,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Search for an address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm\",\n      onClick: () => setShowPopup(true),\n      children: \"Confirm Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      onSelectDisaster: handleSelectDisaster,\n      onClose: () => setShowPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), showDonationPopup && /*#__PURE__*/_jsxDEV(DonationPopup, {\n      address: address,\n      onConfirm: handleDonationSubmit,\n      onClose: () => setShowDonationPopup(false),\n      donationDetails: donationDetails,\n      setDonationDetails: setDonationDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), isLocationConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You asked for help at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: (_pins = pins[pins.length - 1]) === null || _pins === void 0 ? void 0 : _pins.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 35\n        }, this), \" with\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: (_pins2 = pins[pins.length - 1]) === null || _pins2 === void 0 ? void 0 : _pins2.disasterType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), \". Are you sure?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          var _pins3;\n          return handleDeletePin((_pins3 = pins[pins.length - 1]) === null || _pins3 === void 0 ? void 0 : _pins3.id);\n        },\n        children: \"Delete Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLocationConfirmed(false),\n        children: \"Okay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), selectedPin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pin-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedPin.type === 'donation' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Donation at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), \" with\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.goods\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), \" (Quantity: \", selectedPin.quantity, \").\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Help asked at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 31\n          }, this), \" with\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedPin.disasterType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), \".\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeletePin(selectedPin.id),\n        children: \"Delete Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedPin(null),\n        children: \"Okay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Map, \"SEWdlVpK3FbEu1Dbo0ugyFGnAYI=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GoogleMap","Marker","useLoadScript","Autocomplete","axios","Popup","DonationPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","isCallForHelpMode","setIsCallForHelpMode","isDonateGoodsMode","setIsDonateGoodsMode","pins","setPins","_s","_pins","_pins2","markerPosition","setMarkerPosition","showPopup","setShowPopup","showDonationPopup","setShowDonationPopup","isLocationConfirmed","setIsLocationConfirmed","selectedPin","setSelectedPin","address","setAddress","donationDetails","setDonationDetails","goods","quantity","mapCenter","setMapCenter","lat","lng","autocompleteRef","isLoaded","googleMapsApiKey","libraries","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","fetchAddress","error","console","response","get","data","results","formatted_address","handleMapClick","event","newPosition","latLng","onPlaceChanged","current","place","getPlace","geometry","location","handleSelectDisaster","disasterType","newPin","id","Date","now","type","prevPins","handleDonationSubmit","handleDeletePin","pinId","filter","pin","handlePinClick","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","center","mapContainerStyle","width","height","onClick","undefined","map","icon","url","draggable","onDragEnd","className","onLoad","autocomplete","placeholder","value","onChange","e","target","onSelectDisaster","onClose","onConfirm","length","_pins3","_c","$RefreshReg$"],"sources":["C:/Users/Josh/Documents/Computer Science/HACKATHON/bluehacks/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { GoogleMap, Marker, useLoadScript, Autocomplete } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\nimport Popup from './Popup';\r\nimport DonationPopup from './DonationPopup';\r\nimport './Map.css';\r\n\r\nconst Map = ({\r\n  isCallForHelpMode,\r\n  setIsCallForHelpMode,\r\n  isDonateGoodsMode,\r\n  setIsDonateGoodsMode,\r\n  pins,\r\n  setPins,\r\n}) => {\r\n  const [markerPosition, setMarkerPosition] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [showDonationPopup, setShowDonationPopup] = useState(false);\r\n  const [isLocationConfirmed, setIsLocationConfirmed] = useState(false);\r\n  const [selectedPin, setSelectedPin] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [donationDetails, setDonationDetails] = useState({ goods: '', quantity: '' });\r\n  const [mapCenter, setMapCenter] = useState({ lat: 14, lng: 482 }); // State for map center\r\n  const autocompleteRef = useRef(null);\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: 'AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8', // Replace with your API key\r\n    libraries: ['places'],\r\n  });\r\n\r\n  // Get the user's current location\r\n  useEffect(() => {\r\n    if ((isCallForHelpMode || isDonateGoodsMode) && navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const userLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          setMarkerPosition(userLocation);\r\n          setMapCenter(userLocation); // Center the map on the user's location\r\n          fetchAddress(userLocation);\r\n\r\n          // If in \"Donate Goods\" mode, show the donation popup immediately\r\n          if (isDonateGoodsMode) {\r\n            setShowDonationPopup(true);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error getting user location:', error);\r\n        }\r\n      );\r\n    }\r\n  }, [isCallForHelpMode, isDonateGoodsMode]);\r\n\r\n  // Fetch address from coordinates\r\n  const fetchAddress = async (position) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.lat},${position.lng}&key=AIzaSyD1JWD2LMUTfBiF6Gk5jpuMxMpE7_q9EE8`\r\n      );\r\n      if (response.data.results[0]) {\r\n        setAddress(response.data.results[0].formatted_address);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching address:', error);\r\n    }\r\n  };\r\n\r\n  // Handle map clicks (only for call for help mode)\r\n  const handleMapClick = (event) => {\r\n    if (isCallForHelpMode && !isLocationConfirmed) {\r\n      const newPosition = {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n      };\r\n      setMarkerPosition(newPosition);\r\n      setMapCenter(newPosition); // Center the map on the clicked position\r\n      fetchAddress(newPosition);\r\n    }\r\n  };\r\n\r\n  // Handle address search\r\n  const onPlaceChanged = () => {\r\n    if (autocompleteRef.current) {\r\n      const place = autocompleteRef.current.getPlace();\r\n      if (place.geometry) {\r\n        const newPosition = {\r\n          lat: place.geometry.location.lat(),\r\n          lng: place.geometry.location.lng(),\r\n        };\r\n        setMarkerPosition(newPosition);\r\n        setMapCenter(newPosition); // Center the map on the searched location\r\n        setAddress(place.formatted_address);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle disaster selection\r\n  const handleSelectDisaster = (disasterType) => {\r\n    if (markerPosition) {\r\n      const newPin = {\r\n        id: Date.now(),\r\n        position: markerPosition,\r\n        type: 'help', // Pin type: help or donation\r\n        disasterType: disasterType,\r\n        address: address,\r\n      };\r\n      setPins((prevPins) => [...prevPins, newPin]);\r\n      setShowPopup(false);\r\n      setIsLocationConfirmed(true);\r\n      setMarkerPosition(null);\r\n      setAddress('');\r\n      setIsCallForHelpMode(false);\r\n    }\r\n  };\r\n\r\n  // Handle donation submission\r\n  const handleDonationSubmit = () => {\r\n    if (markerPosition) {\r\n      const newPin = {\r\n        id: Date.now(),\r\n        position: markerPosition,\r\n        type: 'donation', // Pin type: help or donation\r\n        address: address,\r\n        goods: donationDetails.goods,\r\n        quantity: donationDetails.quantity,\r\n      };\r\n      setPins((prevPins) => [...prevPins, newPin]);\r\n      setShowDonationPopup(false);\r\n      setMarkerPosition(null);\r\n      setAddress('');\r\n      setIsDonateGoodsMode(false);\r\n    }\r\n  };\r\n\r\n  // Handle pin deletion\r\n  const handleDeletePin = (pinId) => {\r\n    setPins((prevPins) => prevPins.filter((pin) => pin.id !== pinId));\r\n    setSelectedPin(null);\r\n  };\r\n\r\n  // Handle pin selection\r\n  const handlePinClick = (pin) => {\r\n    setSelectedPin(pin);\r\n    setMapCenter(pin.position); // Center the map on the clicked pin\r\n  };\r\n\r\n  // Ensure only one mode is active at a time\r\n  useEffect(() => {\r\n    if (isCallForHelpMode) {\r\n      setIsDonateGoodsMode(false);\r\n    } else if (isDonateGoodsMode) {\r\n      setIsCallForHelpMode(false);\r\n    }\r\n  }, [isCallForHelpMode, isDonateGoodsMode, setIsCallForHelpMode, setIsDonateGoodsMode]);\r\n\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <>\r\n      <GoogleMap\r\n        zoom={12}\r\n        center={mapCenter} // Use the mapCenter state\r\n        mapContainerStyle={{ width: '100%', height: '100vh' }}\r\n        onClick={isCallForHelpMode && !isLocationConfirmed ? handleMapClick : undefined}\r\n      >\r\n        {/* Render all pins */}\r\n        {pins.map((pin) => (\r\n          <Marker\r\n            key={pin.id}\r\n            position={pin.position}\r\n            onClick={() => handlePinClick(pin)} // Handle pin click\r\n            icon={{\r\n              url: pin.type === 'donation' ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {/* Render the current marker (if not confirmed yet) */}\r\n        {isCallForHelpMode && !isDonateGoodsMode && markerPosition && !isLocationConfirmed && (\r\n          <Marker\r\n            position={markerPosition}\r\n            draggable={true}\r\n            onDragEnd={(event) => {\r\n              const newPosition = {\r\n                lat: event.latLng.lat(),\r\n                lng: event.latLng.lng(),\r\n              };\r\n              setMarkerPosition(newPosition);\r\n              setMapCenter(newPosition); // Center the map on the dragged position\r\n              fetchAddress(newPosition);\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n\r\n      {/* Search Bar */}\r\n      {isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && (\r\n        <div className=\"search\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (autocompleteRef.current = autocomplete)}\r\n            onPlaceChanged={onPlaceChanged}\r\n          >\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Search for an address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </Autocomplete>\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirm Location Button */}\r\n      {isCallForHelpMode && !isDonateGoodsMode && !isLocationConfirmed && (\r\n        <button className=\"confirm\" onClick={() => setShowPopup(true)}>\r\n          Confirm Location\r\n        </button>\r\n      )}\r\n\r\n      {/* Popup for disaster selection */}\r\n      {showPopup && (\r\n        <Popup\r\n          onSelectDisaster={handleSelectDisaster}\r\n          onClose={() => setShowPopup(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Popup for donation details */}\r\n      {showDonationPopup && (\r\n        <DonationPopup\r\n          address={address}\r\n          onConfirm={handleDonationSubmit}\r\n          onClose={() => setShowDonationPopup(false)}\r\n          donationDetails={donationDetails}\r\n          setDonationDetails={setDonationDetails}\r\n        />\r\n      )}\r\n\r\n      {/* Confirmation message after disaster selection */}\r\n      {isLocationConfirmed && (\r\n        <div className=\"confirmation-popup\">\r\n          <p>\r\n            You asked for help at <strong>{pins[pins.length - 1]?.address}</strong> with{\" \"}\r\n            <strong>{pins[pins.length - 1]?.disasterType}</strong>. Are you sure?\r\n          </p>\r\n          <button onClick={() => handleDeletePin(pins[pins.length - 1]?.id)}>Delete Pin</button>\r\n          <button onClick={() => setIsLocationConfirmed(false)}>Okay</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pin details when a pin is selected */}\r\n      {selectedPin && (\r\n        <div className=\"pin-details\">\r\n          <p>\r\n            {selectedPin.type === 'donation' ? (\r\n              <>\r\n                Donation at <strong>{selectedPin.address}</strong> with{\" \"}\r\n                <strong>{selectedPin.goods}</strong> (Quantity: {selectedPin.quantity}).\r\n              </>\r\n            ) : (\r\n              <>\r\n                Help asked at <strong>{selectedPin.address}</strong> with{\" \"}\r\n                <strong>{selectedPin.disasterType}</strong>.\r\n              </>\r\n            )}\r\n          </p>\r\n          <button onClick={() => handleDeletePin(selectedPin.id)}>Delete Pin</button>\r\n          <button onClick={() => setSelectedPin(null)}>Okay</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}